// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Lykke.AlgoStore.KubernetesClient.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections.Generic;

    /// <summary>
    /// Represents a Fibre Channel volume. Fibre Channel volumes can only be
    /// mounted as read/write once. Fibre Channel volumes support ownership
    /// management and SELinux relabeling.
    /// </summary>
    public partial class Iok8skubernetespkgapiv1FCVolumeSource
    {
        /// <summary>
        /// Initializes a new instance of the
        /// Iok8skubernetespkgapiv1FCVolumeSource class.
        /// </summary>
        public Iok8skubernetespkgapiv1FCVolumeSource()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// Iok8skubernetespkgapiv1FCVolumeSource class.
        /// </summary>
        /// <param name="lun">Required: FC target lun number</param>
        /// <param name="targetWWNs">Required: FC target worldwide names
        /// (WWNs)</param>
        /// <param name="fsType">Filesystem type to mount. Must be a filesystem
        /// type supported by the host operating system. Ex. "ext4", "xfs",
        /// "ntfs". Implicitly inferred to be "ext4" if unspecified.</param>
        /// <param name="readOnlyProperty">Optional: Defaults to false
        /// (read/write). ReadOnly here will force the ReadOnly setting in
        /// VolumeMounts.</param>
        public Iok8skubernetespkgapiv1FCVolumeSource(int lun, IList<string> targetWWNs, string fsType = default(string), bool? readOnlyProperty = default(bool?))
        {
            FsType = fsType;
            Lun = lun;
            ReadOnlyProperty = readOnlyProperty;
            TargetWWNs = targetWWNs;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets filesystem type to mount. Must be a filesystem type
        /// supported by the host operating system. Ex. "ext4", "xfs", "ntfs".
        /// Implicitly inferred to be "ext4" if unspecified.
        /// </summary>
        [JsonProperty(PropertyName = "fsType")]
        public string FsType { get; set; }

        /// <summary>
        /// Gets or sets required: FC target lun number
        /// </summary>
        [JsonProperty(PropertyName = "lun")]
        public int Lun { get; set; }

        /// <summary>
        /// Gets or sets optional: Defaults to false (read/write). ReadOnly
        /// here will force the ReadOnly setting in VolumeMounts.
        /// </summary>
        [JsonProperty(PropertyName = "readOnly")]
        public bool? ReadOnlyProperty { get; set; }

        /// <summary>
        /// Gets or sets required: FC target worldwide names (WWNs)
        /// </summary>
        [JsonProperty(PropertyName = "targetWWNs")]
        public IList<string> TargetWWNs { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (TargetWWNs == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "TargetWWNs");
            }
        }
    }
}
