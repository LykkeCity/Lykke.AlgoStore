// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Lykke.AlgoStore.KubernetesClient.Models
{
    using Newtonsoft.Json;

    /// <summary>
    /// EnvFromSource represents the source of a set of ConfigMaps
    /// </summary>
    public partial class Iok8skubernetespkgapiv1EnvFromSource
    {
        /// <summary>
        /// Initializes a new instance of the
        /// Iok8skubernetespkgapiv1EnvFromSource class.
        /// </summary>
        public Iok8skubernetespkgapiv1EnvFromSource()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// Iok8skubernetespkgapiv1EnvFromSource class.
        /// </summary>
        /// <param name="configMapRef">The ConfigMap to select from</param>
        /// <param name="prefix">An optional identifer to prepend to each key
        /// in the ConfigMap. Must be a C_IDENTIFIER.</param>
        /// <param name="secretRef">The Secret to select from</param>
        public Iok8skubernetespkgapiv1EnvFromSource(Iok8skubernetespkgapiv1ConfigMapEnvSource configMapRef = default(Iok8skubernetespkgapiv1ConfigMapEnvSource), string prefix = default(string), Iok8skubernetespkgapiv1SecretEnvSource secretRef = default(Iok8skubernetespkgapiv1SecretEnvSource))
        {
            ConfigMapRef = configMapRef;
            Prefix = prefix;
            SecretRef = secretRef;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the ConfigMap to select from
        /// </summary>
        [JsonProperty(PropertyName = "configMapRef")]
        public Iok8skubernetespkgapiv1ConfigMapEnvSource ConfigMapRef { get; set; }

        /// <summary>
        /// Gets or sets an optional identifer to prepend to each key in the
        /// ConfigMap. Must be a C_IDENTIFIER.
        /// </summary>
        [JsonProperty(PropertyName = "prefix")]
        public string Prefix { get; set; }

        /// <summary>
        /// Gets or sets the Secret to select from
        /// </summary>
        [JsonProperty(PropertyName = "secretRef")]
        public Iok8skubernetespkgapiv1SecretEnvSource SecretRef { get; set; }

    }
}
