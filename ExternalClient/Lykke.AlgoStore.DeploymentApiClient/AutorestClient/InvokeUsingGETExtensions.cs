// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Lykke.AlgoStore.DeploymentApiClient
{
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for InvokeUsingGET.
    /// </summary>
    public static partial class InvokeUsingGETExtensions
    {
            /// <summary>
            /// invoke
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static object One(this IInvokeUsingGET operations)
            {
                return operations.OneAsync().GetAwaiter().GetResult();
            }

            /// <summary>
            /// invoke
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> OneAsync(this IInvokeUsingGET operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.OneWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// invoke
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static object Two(this IInvokeUsingGET operations)
            {
                return operations.TwoAsync().GetAwaiter().GetResult();
            }

            /// <summary>
            /// invoke
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> TwoAsync(this IInvokeUsingGET operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.TwoWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// invoke
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static object Three(this IInvokeUsingGET operations)
            {
                return operations.ThreeAsync().GetAwaiter().GetResult();
            }

            /// <summary>
            /// invoke
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> ThreeAsync(this IInvokeUsingGET operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ThreeWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// invoke
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static object Four(this IInvokeUsingGET operations)
            {
                return operations.FourAsync().GetAwaiter().GetResult();
            }

            /// <summary>
            /// invoke
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> FourAsync(this IInvokeUsingGET operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.FourWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// invoke
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static object Five(this IInvokeUsingGET operations)
            {
                return operations.FiveAsync().GetAwaiter().GetResult();
            }

            /// <summary>
            /// invoke
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> FiveAsync(this IInvokeUsingGET operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.FiveWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// invoke
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static object Six(this IInvokeUsingGET operations)
            {
                return operations.SixAsync().GetAwaiter().GetResult();
            }

            /// <summary>
            /// invoke
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> SixAsync(this IInvokeUsingGET operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.SixWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// invoke
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static object Seven(this IInvokeUsingGET operations)
            {
                return operations.SevenAsync().GetAwaiter().GetResult();
            }

            /// <summary>
            /// invoke
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> SevenAsync(this IInvokeUsingGET operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.SevenWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// invoke
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static object OneFour(this IInvokeUsingGET operations)
            {
                return operations.OneFourAsync().GetAwaiter().GetResult();
            }

            /// <summary>
            /// invoke
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> OneFourAsync(this IInvokeUsingGET operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.OneFourWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// invoke
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static object OneFive(this IInvokeUsingGET operations)
            {
                return operations.OneFiveAsync().GetAwaiter().GetResult();
            }

            /// <summary>
            /// invoke
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> OneFiveAsync(this IInvokeUsingGET operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.OneFiveWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// invoke
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static object OneSix(this IInvokeUsingGET operations)
            {
                return operations.OneSixAsync().GetAwaiter().GetResult();
            }

            /// <summary>
            /// invoke
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> OneSixAsync(this IInvokeUsingGET operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.OneSixWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// invoke
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static object OneSeven(this IInvokeUsingGET operations)
            {
                return operations.OneSevenAsync().GetAwaiter().GetResult();
            }

            /// <summary>
            /// invoke
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> OneSevenAsync(this IInvokeUsingGET operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.OneSevenWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// invoke
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='live'>
            /// live
            /// </param>
            public static void OneEight(this IInvokeUsingGET operations, bool? live = true)
            {
                operations.OneEightAsync(live).GetAwaiter().GetResult();
            }

            /// <summary>
            /// invoke
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='live'>
            /// live
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task OneEightAsync(this IInvokeUsingGET operations, bool? live = true, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.OneEightWithHttpMessagesAsync(live, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// invoke
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='live'>
            /// live
            /// </param>
            public static void OneNine(this IInvokeUsingGET operations, bool? live = true)
            {
                operations.OneNineAsync(live).GetAwaiter().GetResult();
            }

            /// <summary>
            /// invoke
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='live'>
            /// live
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task OneNineAsync(this IInvokeUsingGET operations, bool? live = true, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.OneNineWithHttpMessagesAsync(live, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// invoke
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static object Eight(this IInvokeUsingGET operations)
            {
                return operations.EightAsync().GetAwaiter().GetResult();
            }

            /// <summary>
            /// invoke
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> EightAsync(this IInvokeUsingGET operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.EightWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// invoke
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static object Nine(this IInvokeUsingGET operations)
            {
                return operations.NineAsync().GetAwaiter().GetResult();
            }

            /// <summary>
            /// invoke
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> NineAsync(this IInvokeUsingGET operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.NineWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// invoke
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static void TwoZero(this IInvokeUsingGET operations)
            {
                operations.TwoZeroAsync().GetAwaiter().GetResult();
            }

            /// <summary>
            /// invoke
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task TwoZeroAsync(this IInvokeUsingGET operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.TwoZeroWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// invoke
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static void TwoOne(this IInvokeUsingGET operations)
            {
                operations.TwoOneAsync().GetAwaiter().GetResult();
            }

            /// <summary>
            /// invoke
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task TwoOneAsync(this IInvokeUsingGET operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.TwoOneWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// invoke
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static object TwoTwo(this IInvokeUsingGET operations)
            {
                return operations.TwoTwoAsync().GetAwaiter().GetResult();
            }

            /// <summary>
            /// invoke
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> TwoTwoAsync(this IInvokeUsingGET operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.TwoTwoWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// invoke
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static object TwoThree(this IInvokeUsingGET operations)
            {
                return operations.TwoThreeAsync().GetAwaiter().GetResult();
            }

            /// <summary>
            /// invoke
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> TwoThreeAsync(this IInvokeUsingGET operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.TwoThreeWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// invoke
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static object OneZero(this IInvokeUsingGET operations)
            {
                return operations.OneZeroAsync().GetAwaiter().GetResult();
            }

            /// <summary>
            /// invoke
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> OneZeroAsync(this IInvokeUsingGET operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.OneZeroWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// invoke
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static object OneOne(this IInvokeUsingGET operations)
            {
                return operations.OneOneAsync().GetAwaiter().GetResult();
            }

            /// <summary>
            /// invoke
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> OneOneAsync(this IInvokeUsingGET operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.OneOneWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// invoke
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static object TwoFour(this IInvokeUsingGET operations)
            {
                return operations.TwoFourAsync().GetAwaiter().GetResult();
            }

            /// <summary>
            /// invoke
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> TwoFourAsync(this IInvokeUsingGET operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.TwoFourWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// invoke
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static object TwoFive(this IInvokeUsingGET operations)
            {
                return operations.TwoFiveAsync().GetAwaiter().GetResult();
            }

            /// <summary>
            /// invoke
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> TwoFiveAsync(this IInvokeUsingGET operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.TwoFiveWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// invoke
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static object OneTwo(this IInvokeUsingGET operations)
            {
                return operations.OneTwoAsync().GetAwaiter().GetResult();
            }

            /// <summary>
            /// invoke
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> OneTwoAsync(this IInvokeUsingGET operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.OneTwoWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// invoke
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static object OneThree(this IInvokeUsingGET operations)
            {
                return operations.OneThreeAsync().GetAwaiter().GetResult();
            }

            /// <summary>
            /// invoke
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> OneThreeAsync(this IInvokeUsingGET operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.OneThreeWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
