// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Lykke.AlgoStore.DeploymentApiClient.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class ModelAndView
    {
        /// <summary>
        /// Initializes a new instance of the ModelAndView class.
        /// </summary>
        public ModelAndView()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ModelAndView class.
        /// </summary>
        /// <param name="status">Possible values include: '100', '101', '102',
        /// '103', '200', '201', '202', '203', '204', '205', '206', '207',
        /// '208', '226', '300', '301', '302', '303', '304', '305', '307',
        /// '308', '400', '401', '402', '403', '404', '405', '406', '407',
        /// '408', '409', '410', '411', '412', '413', '414', '415', '416',
        /// '417', '418', '419', '420', '421', '422', '423', '424', '426',
        /// '428', '429', '431', '451', '500', '501', '502', '503', '504',
        /// '505', '506', '507', '508', '509', '510', '511'</param>
        public ModelAndView(bool? empty = default(bool?), object model = default(object), IDictionary<string, object> modelMap = default(IDictionary<string, object>), bool? reference = default(bool?), string status = default(string), View view = default(View), string viewName = default(string))
        {
            Empty = empty;
            Model = model;
            ModelMap = modelMap;
            Reference = reference;
            Status = status;
            View = view;
            ViewName = viewName;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "empty")]
        public bool? Empty { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "model")]
        public object Model { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "modelMap")]
        public IDictionary<string, object> ModelMap { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "reference")]
        public bool? Reference { get; set; }

        /// <summary>
        /// Gets or sets possible values include: '100', '101', '102', '103',
        /// '200', '201', '202', '203', '204', '205', '206', '207', '208',
        /// '226', '300', '301', '302', '303', '304', '305', '307', '308',
        /// '400', '401', '402', '403', '404', '405', '406', '407', '408',
        /// '409', '410', '411', '412', '413', '414', '415', '416', '417',
        /// '418', '419', '420', '421', '422', '423', '424', '426', '428',
        /// '429', '431', '451', '500', '501', '502', '503', '504', '505',
        /// '506', '507', '508', '509', '510', '511'
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public string Status { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "view")]
        public View View { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "viewName")]
        public string ViewName { get; set; }

    }
}
