//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Lykke.AlgoStore.Services.Strings {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Phrases {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Phrases() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Lykke.AlgoStore.Services.Strings.Phrases", typeof(Phrases).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Algo content is empty.
        /// </summary>
        internal static string AlgoContentEmpty {
            get {
                return ResourceManager.GetString("AlgoContentEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot save algo data. ClientId: {0}, AlgoId: {1}.
        /// </summary>
        internal static string AlgoDataSaveFailed {
            get {
                return ResourceManager.GetString("AlgoDataSaveFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot save algo data. Algo code validation failed.{0}ClientId: {1}, AlgoId: {2}{0}Details:{0}{3}.
        /// </summary>
        internal static string AlgoDataSaveFailedOnCodeValidation {
            get {
                return ResourceManager.GetString("AlgoDataSaveFailedOnCodeValidation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AlgoId is empty.
        /// </summary>
        internal static string AlgoIdEmpty {
            get {
                return ResourceManager.GetString("AlgoIdEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot unpublish algo because it has algo instances..
        /// </summary>
        internal static string AlgoInstancesExist {
            get {
                return ResourceManager.GetString("AlgoInstancesExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Asset {0} or {1} are missing from wallet {2}.
        /// </summary>
        internal static string AssetsMissingFromWallet {
            get {
                return ResourceManager.GetString("AssetsMissingFromWallet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ClientId is empty.
        /// </summary>
        internal static string ClientIdEmpty {
            get {
                return ResourceManager.GetString("ClientIdEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Classes inheriting BaseAlgo must be sealed.
        /// </summary>
        internal static string ERROR_ALGO_NOT_SEALED {
            get {
                return ResourceManager.GetString("ERROR_ALGO_NOT_SEALED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to More than one class inheriting BaseAlgo is not allowed.
        /// </summary>
        internal static string ERROR_BASEALGO_MULTIPLE_INHERITANCE {
            get {
                return ResourceManager.GetString("ERROR_BASEALGO_MULTIPLE_INHERITANCE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A class inheriting BaseAlgo was not found.
        /// </summary>
        internal static string ERROR_BASEALGO_NOT_INHERITED {
            get {
                return ResourceManager.GetString("ERROR_BASEALGO_NOT_INHERITED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Algo must override {0} and/or {1}.
        /// </summary>
        internal static string ERROR_EVENT_NOT_IMPLEMENTED {
            get {
                return ResourceManager.GetString("ERROR_EVENT_NOT_IMPLEMENTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A type named BaseAlgo is not allowed.
        /// </summary>
        internal static string ERROR_TYPE_NAMED_BASEALGO {
            get {
                return ResourceManager.GetString("ERROR_TYPE_NAMED_BASEALGO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Instance Not Found.
        /// </summary>
        internal static string InstanceNotFound {
            get {
                return ResourceManager.GetString("InstanceNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot find algo data. ClientId: {0}, AlgoId: {1}.
        /// </summary>
        internal static string NoAlgoData {
            get {
                return ResourceManager.GetString("NoAlgoData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Public algo Not Found.
        /// </summary>
        internal static string PublicAlgoNotFound {
            get {
                return ResourceManager.GetString("PublicAlgoNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are running algo instance(s).
        /// </summary>
        internal static string RunningAlgoInstanceExists {
            get {
                return ResourceManager.GetString("RunningAlgoInstanceExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot publish/unpublish algo because you are not the author of the algo..
        /// </summary>
        internal static string UserNotAuthorOfAlgo {
            get {
                return ResourceManager.GetString("UserNotAuthorOfAlgo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The wallet is already used by another your instance.
        /// </summary>
        internal static string WalletAlreadyUsed {
            get {
                return ResourceManager.GetString("WalletAlreadyUsed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wallet is already used by a running instance - Wallet Id {0}. You should use another wallet. Algo id {1}, Client Id {2}.
        /// </summary>
        internal static string WalletIsAlreadyUsed {
            get {
                return ResourceManager.GetString("WalletIsAlreadyUsed", resourceCulture);
            }
        }
    }
}
