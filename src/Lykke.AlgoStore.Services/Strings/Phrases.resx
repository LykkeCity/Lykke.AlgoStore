<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AlgoInstancesExist" xml:space="preserve">
    <value>Cannot {0} algo because it has {1}algo instances.</value>
  </data>
  <data name="AssetsMissingFromWallet" xml:space="preserve">
    <value>Asset {0} or {1} are missing from wallet {2}</value>
  </data>
  <data name="InstanceNotFound" xml:space="preserve">
    <value>Instance Not Found</value>
  </data>
  <data name="PublicAlgoNotFound" xml:space="preserve">
    <value>Public algo Not Found</value>
  </data>
  <data name="UserNotAuthorOfAlgo" xml:space="preserve">
    <value>Cannot publish/unpublish algo because you are not the author of the algo.</value>
  </data>
  <data name="WalletAlreadyUsed" xml:space="preserve">
    <value>The wallet is already used by another your instance</value>
  </data>
  <data name="WalletIsAlreadyUsed" xml:space="preserve">
    <value>Wallet is already used by a running instance - Wallet Id {0}. You should use another wallet. Algo id {1}, Client Id {2}</value>
  </data>
  <data name="ERROR_BASEALGO_MULTIPLE_INHERITANCE" xml:space="preserve">
    <value>More than one class inheriting BaseAlgo is not allowed</value>
  </data>
  <data name="ERROR_ALGO_NOT_SEALED" xml:space="preserve">
    <value>Classes inheriting BaseAlgo must be sealed</value>
  </data>
  <data name="ERROR_BASEALGO_NOT_INHERITED" xml:space="preserve">
    <value>A class inheriting BaseAlgo was not found</value>
  </data>
  <data name="ERROR_TYPE_NAMED_BASEALGO" xml:space="preserve">
    <value>A type named BaseAlgo is not allowed</value>
  </data>
  <data name="ERROR_EVENT_NOT_IMPLEMENTED" xml:space="preserve">
    <value>Algo must override {0} and/or {1}</value>
  </data>
  <data name="ClientIdEmpty" xml:space="preserve">
    <value>ClientId is empty</value>
  </data>
  <data name="AlgoContentEmpty" xml:space="preserve">
    <value>Algo content is empty</value>
  </data>
  <data name="AlgoIdEmpty" xml:space="preserve">
    <value>AlgoId is empty</value>
  </data>
  <data name="NoAlgoData" xml:space="preserve">
    <value>Cannot find algo data. ClientId: {0}, AlgoId: {1}</value>
  </data>
  <data name="RunningAlgoInstanceExists" xml:space="preserve">
    <value>There are running algo instance(s)</value>
  </data>
  <data name="AlgoDataSaveFailedOnCodeValidation" xml:space="preserve">
    <value>Cannot save algo data. Algo code validation failed.{0}ClientId: {1}, AlgoId: {2}{0}Details:{0}{3}</value>
  </data>
  <data name="AlgoDataSaveFailed" xml:space="preserve">
    <value>Cannot save algo data. ClientId: {0}, AlgoId: {1}</value>
  </data>
  <data name="CreateAlgoFailedOnValidationDisplayMessage" xml:space="preserve">
    <value>Algo creation process failed due to data validation errors</value>
  </data>
  <data name="CreateAlgoFailedOnCodeValidationDisplayMessage" xml:space="preserve">
    <value>Algo creation process failed due to code validation errors. Details: {0}</value>
  </data>
  <data name="CreateAlgoFailedOnDataSaveDisplayMessage" xml:space="preserve">
    <value>Algo creation process failed while saving algo data</value>
  </data>
  <data name="EditAlgoFailedOnValidationDisplayMessage" xml:space="preserve">
    <value>Algo edit process failed due to data validation errors</value>
  </data>
  <data name="EditAlgoFailedOnCodeValidationDisplayMessage" xml:space="preserve">
    <value>Algo edit process failed due to code validation errors. Details: {0}</value>
  </data>
  <data name="EditAlgoFailedOnDataSaveDisplayMessage" xml:space="preserve">
    <value>Algo edit process failed while saving algo data</value>
  </data>
  <data name="NoAlgoDataDisplayMessage" xml:space="preserve">
    <value>Cannot find algo data</value>
  </data>
  <data name="RunningAlgoInstanceExistsDisplayMessage" xml:space="preserve">
    <value>Algorithms with instances can not be modified</value>
  </data>
  <data name="AssetPairDisabledDisplayMessage" xml:space="preserve">
    <value>The asset pair {0} is temporarily disabled.</value>
  </data>
  <data name="ParamCantBeDeleted" xml:space="preserve">
    <value>The {0} cannot be deleted.</value>
  </data>
  <data name="ParamInvalid" xml:space="preserve">
    <value>Invalid {0}.</value>
  </data>
  <data name="ParamNotFoundDisplayMessage" xml:space="preserve">
    <value>The {0} was not found.</value>
  </data>
  <data name="StringParameterMissing" xml:space="preserve">
    <value>{0} is empty.</value>
  </data>
  <data name="StringParameterMissingDisplayMessage" xml:space="preserve">
    <value>Please fill in all required fields.</value>
  </data>
  <data name="TradeVolumeBelowMinimum" xml:space="preserve">
    <value>The amount should be higher than minimal order size {0} {1}</value>
  </data>
  <data name="UserCantSeeAlgo" xml:space="preserve">
    <value>You do not have permission to access this algo.</value>
  </data>
  <data name="WalletHasNoAssetsDisplayMessage" xml:space="preserve">
    <value>This wallet has no assets.</value>
  </data>
  <data name="AssetInvalidForAssetPair" xml:space="preserve">
    <value>Asset {0} is not valid for asset pair {1}.</value>
  </data>
  <data name="PermissionsCantBeModified" xml:space="preserve">
    <value>The permissions of this role cannot be modified.</value>
  </data>
  <data name="RoleAlreadyExists" xml:space="preserve">
    <value>Role {0} already exists.</value>
  </data>
  <data name="RoleCantBeModified" xml:space="preserve">
    <value>This role can't be modified.</value>
  </data>
  <data name="UserNotInUserRole" xml:space="preserve">
    <value>Current user does not belong to 'User' role.</value>
  </data>
  <data name="AlgoMustNotBePublic" xml:space="preserve">
    <value>The algo must not be public.</value>
  </data>
  <data name="AlgoIsPublic" xml:space="preserve">
    <value>Algo {0} (client {1}) is public and not editable</value>
  </data>
  <data name="AlgoIsPublicDisplayMessage" xml:space="preserve">
    <value>Public algorithms can not be modified</value>
  </data>
</root>